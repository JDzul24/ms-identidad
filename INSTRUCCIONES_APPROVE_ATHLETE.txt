# üéØ INSTRUCCIONES PARA FRONTEND FLUTTER - APPROVE ATHLETE

## üìã **ENDPOINT EXACTO DEL BACKEND**

### **URL CORRECTA:**
```
POST /identity/v1/atletas/{atletaId}/aprobar
```

### **Headers requeridos:**
```
Authorization: Bearer <jwt_token>
Content-Type: application/json
```

---

## üîç **ESTRUCTURA EXACTA DEL BODY**

### **‚ùå INCORRECTO (Lo que el frontend est√° enviando):**
```json
{
  "datosFisicos": {
    "peso": 80,
    "estatura": 170,
    "nivel": "principiante",
    "guardia": "orthodox",
    "condicionesMedicas": "Tiene down",
    "objetivos": "Todo bien"
  },
  "datosTutor": {
    "nombreTutor": "Zuri Jimenez",
    "telefonoTutor": "9611665392",
    "relacionTutor": "Padre",
    "direccionTutor": "Enrique segoviano",
    "emailTutor": "azur_103@hotmail.com"
  }
}
```

### **‚úÖ CORRECTO (Lo que el backend espera):**
```json
{
  "nivel": "principiante",
  "alturaCm": 170,
  "pesoKg": 80,
  "guardia": "orthodox",
  "alergias": "Tiene down",
  "contactoEmergenciaNombre": "Zuri Jimenez",
  "contactoEmergenciaTelefono": "9611665392"
}
```

---

## üìä **CAMPOS REQUERIDOS Y OPCIONALES**

### **üî¥ CAMPOS OBLIGATORIOS:**
```json
{
  "nivel": "string",           // REQUERIDO
  "alturaCm": number,          // REQUERIDO
  "pesoKg": number            // REQUERIDO
}
```

### **üü° CAMPOS OPCIONALES:**
```json
{
  "guardia": "string",                    // OPCIONAL
  "alergias": "string",                   // OPCIONAL
  "contactoEmergenciaNombre": "string",   // OPCIONAL
  "contactoEmergenciaTelefono": "string"  // OPCIONAL
}
```

---

## üéØ **EJEMPLO COMPLETO DE REQUEST**

### **URL:**
```
POST https://api.capbox.site/identity/v1/atletas/a691bcae-c8ce-4355-be9a-3e9984a0fa61/aprobar
```

### **Headers:**
```
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
Content-Type: application/json
```

### **Body:**
```json
{
  "nivel": "principiante",
  "alturaCm": 170,
  "pesoKg": 80,
  "guardia": "orthodox",
  "alergias": "Tiene down",
  "contactoEmergenciaNombre": "Zuri Jimenez",
  "contactoEmergenciaTelefono": "9611665392"
}
```

### **Response 200:**
```json
{
  "mensaje": "Atleta aprobado y perfil actualizado con √©xito."
}
```

---

## üö® **VALIDACIONES DEL BACKEND**

### **1. Validaci√≥n de tipos:**
- `nivel`: string (requerido)
- `alturaCm`: number (requerido, m√≠nimo 0)
- `pesoKg`: number (requerido, m√≠nimo 0)
- `guardia`: string (opcional)
- `alergias`: string (opcional)
- `contactoEmergenciaNombre`: string (opcional)
- `contactoEmergenciaTelefono`: string (opcional)

### **2. Validaci√≥n de permisos:**
- ‚úÖ Solo usuarios con rol "Entrenador"
- ‚úÖ El coach debe tener una solicitud pendiente para el atleta
- ‚úÖ El atleta debe estar en estado "pendiente_datos"

### **3. Validaci√≥n de negocio:**
- ‚úÖ La solicitud no debe estar ya completada
- ‚úÖ El coach debe ser el mismo que cre√≥ la solicitud

---

## üîß **C√ìDIGOS DE ERROR POSIBLES**

### **400 Bad Request:**
```json
{
  "statusCode": 400,
  "message": "El nivel del atleta es requerido."
}
```

### **403 Forbidden:**
```json
{
  "statusCode": 403,
  "message": "No tienes permisos para realizar esta acci√≥n."
}
```

### **404 Not Found:**
```json
{
  "statusCode": 404,
  "message": "No se encontr√≥ una solicitud pendiente para el atleta con ID..."
}
```

### **422 Unprocessable Entity:**
```json
{
  "statusCode": 422,
  "message": "Esta solicitud ya ha sido procesada."
}
```

---

## üéØ **CAMBIOS NECESARIOS EN FLUTTER**

### **1. Cambiar la URL:**
```dart
// ‚ùå INCORRECTO
String url = '/identity/v1/athletes/$athleteId/approve';

// ‚úÖ CORRECTO
String url = '/identity/v1/atletas/$athleteId/aprobar';
```

### **2. Cambiar la estructura del body:**
```dart
// ‚ùå INCORRECTO
Map<String, dynamic> body = {
  'datosFisicos': {
    'peso': peso,
    'estatura': estatura,
    'nivel': nivel,
    'guardia': guardia,
    'condicionesMedicas': condicionesMedicas,
    'objetivos': objetivos
  },
  'datosTutor': {
    'nombreTutor': nombreTutor,
    'telefonoTutor': telefonoTutor,
    'relacionTutor': relacionTutor,
    'direccionTutor': direccionTutor,
    'emailTutor': emailTutor
  }
};

// ‚úÖ CORRECTO
Map<String, dynamic> body = {
  'nivel': nivel,
  'alturaCm': estatura,
  'pesoKg': peso,
  'guardia': guardia,
  'alergias': condicionesMedicas,
  'contactoEmergenciaNombre': nombreTutor,
  'contactoEmergenciaTelefono': telefonoTutor
};
```

### **3. Mapeo de campos:**
```dart
// Mapeo de campos del frontend al backend
String nivel = 'principiante'; // o 'intermedio', 'avanzado'
int alturaCm = estatura; // convertir a cm
int pesoKg = peso; // convertir a kg
String guardia = 'orthodox'; // o 'southpaw', 'switcher'
String alergias = condicionesMedicas; // usar el campo de condiciones m√©dicas
String contactoEmergenciaNombre = nombreTutor;
String contactoEmergenciaTelefono = telefonoTutor;
```

---

## üöÄ **EJEMPLO DE IMPLEMENTACI√ìN EN FLUTTER**

```dart
Future<void> approveAthlete(String athleteId, Map<String, dynamic> athleteData) async {
  try {
    final response = await dio.post(
      '/identity/v1/atletas/$athleteId/aprobar',
      data: {
        'nivel': athleteData['nivel'],
        'alturaCm': athleteData['estatura'],
        'pesoKg': athleteData['peso'],
        'guardia': athleteData['guardia'],
        'alergias': athleteData['condicionesMedicas'],
        'contactoEmergenciaNombre': athleteData['nombreTutor'],
        'contactoEmergenciaTelefono': athleteData['telefonoTutor'],
      },
    );
    
    print('‚úÖ Atleta aprobado exitosamente');
    return response.data;
  } catch (e) {
    print('‚ùå Error aprobando atleta: $e');
    rethrow;
  }
}
```

---

## ‚úÖ **CHECKLIST PARA EL FRONTEND**

- [ ] ‚úÖ Cambiar URL de `/athletes/` a `/atletas/`
- [ ] ‚úÖ Cambiar URL de `/approve` a `/aprobar`
- [ ] ‚úÖ Eliminar estructura anidada `datosFisicos` y `datosTutor`
- [ ] ‚úÖ Usar campos planos en el body
- [ ] ‚úÖ Mapear `estatura` a `alturaCm`
- [ ] ‚úÖ Mapear `peso` a `pesoKg`
- [ ] ‚úÖ Mapear `condicionesMedicas` a `alergias`
- [ ] ‚úÖ Mapear `nombreTutor` a `contactoEmergenciaNombre`
- [ ] ‚úÖ Mapear `telefonoTutor` a `contactoEmergenciaTelefono`
- [ ] ‚úÖ Incluir `Authorization: Bearer <token>` en headers
- [ ] ‚úÖ Usar `Content-Type: application/json`

---

## üéØ **RESUMEN**

**El backend espera una estructura FLAT (plana), NO anidada:**

```json
{
  "nivel": "string",
  "alturaCm": number,
  "pesoKg": number,
  "guardia": "string",
  "alergias": "string",
  "contactoEmergenciaNombre": "string",
  "contactoEmergenciaTelefono": "string"
}
```

**NO esta estructura anidada:**
```json
{
  "datosFisicos": { ... },
  "datosTutor": { ... }
}
```

**¬°Con estos cambios el endpoint funcionar√° correctamente!** üéâ 